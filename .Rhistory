load("~/Dropbox/RScrips_LaBioComplex/Ricardo/Mariel/Muscle/Regulons/Rede/grafocomhits.RData")
library(RedeR)
rdp <- RedPort()
calld(rdp)
n0 <- addGraph(rdp, g, gcoord=c(30,30), gscale=15, isNest=F, theme='tm1', zoom=25)
relax(rdp,50,100,100,100,10,75,5,20,ps=TRUE)
load("~/Dropbox/RScrips_LaBioComplex/Ricardo/Mariel/Muscle/Regulons/Rede/grafocomhits.RData")
library(RedeR)
rdp <- RedPort()
calld(rdp)
n0 <- addGraph(rdp, g, gcoord=c(30,30), gscale=15, isNest=F, theme='tm1', zoom=25)
relax(rdp,50,100,100,100,10,75,5,20,ps=TRUE)
load("~/Dropbox/RScrips_LaBioComplex/Ricardo/Mariel/Muscle/Regulons/Rede/grafocomhits.RData")
library(RedeR)
rdp <- RedPort()
calld(rdp)
n0 <- addGraph(rdp, g, gcoord=c(30,30), gscale=15, isNest=F, theme='tm1', zoom=25)
relax(rdp,50,100,100,100,10,75,5,20,ps=TRUE)
rdp <- RedPort()
calld(rdp)
n0 <- addGraph(rdp, g, gcoord=c(30,30), gscale=15, isNest=F, theme='tm1', zoom=25)
relax(rdp,50,100,100,100,10,75,5,20,ps=TRUE)
load("~/Dropbox/RScrips_LaBioComplex/Ricardo/Mariel/Muscle/Regulons/Rede/grafocomhits.RData")
rdp <- RedPort()
calld(rdp)
n0 <- addGraph(rdp, g, gcoord=c(30,30), gscale=15, isNest=F, theme='tm1', zoom=25)
relax(rdp,50,100,100,100,10,75,5,20,ps=TRUE)
library(RedeR)
rdp <- RedPort()
calld(rdp)
n0 <- addGraph(rdp, g, gcoord=c(30,30), gscale=15, isNest=F, theme='tm1', zoom=25)
relax(rdp,50,100,100,100,10,75,5,20,ps=TRUE)
rdp <- RedPort()
calld(rdp)
n0 <- addGraph(rdp, g, gcoord=c(30,30), gscale=15, isNest=F, theme='tm1', zoom=25)
relax(rdp,50,100,100,100,10,75,5,20,ps=TRUE)
load("~/Dropbox/RScrips_LaBioComplex/Ricardo/Mariel/Muscle/Regulons/Rede/grafocomhits.RData")
g <- graph.data.frame(reg, directed=TRUE, vertices=dictionary)
print(g, e=TRUE, v=TRUE)
## The opposite operation
get.data.frame(g, what="vertices")
get.data.frame(g, what="edges")
library(RedeR)
rdp <- RedPort ()
calld(rdp)
n0 <- addGraph(rdp, g, gcoord=c(50,50), gscale=15, isNest=F, theme='tm2', zoom=25)
relax(rdp,100,100,50,100,5,75,5,20,ps=TRUE)
rdp <- RedPort ()
calld(rdp)
n0 <- addGraph(rdp, g, gcoord=c(50,50), gscale=15, isNest=F, theme='tm2', zoom=25)
relax(rdp,100,100,50,100,5,75,5,20,ps=TRUE)
rdp <- RedPort ()
calld(rdp)
n0 <- addGraph(rdp, g, gcoord=c(50,50), gscale=15, isNest=F, theme='tm2', zoom=25)
relax(rdp,100,100,50,100,5,75,5,20,ps=TRUE)
library(RedeR)
load("~/Dropbox/RScrips_LaBioComplex/Ricardo/Mariel/Muscle/Regulons/Rede/grafocomhits.RData")
rdp <- RedPort ()
calld(rdp)
n0 <- addGraph(rdp, g, gcoord=c(50,50), gscale=15, isNest=F, theme='tm2', zoom=25)
relax(rdp,100,100,50,100,5,75,5,20,ps=TRUE)
hist(c(13,rep(18,6),19,19,19,19,19,19,rep(20,13),rep(21,2),rep(22,8),23,rep(24,9), rep(25,31)))
load("~/Dropbox/Mariel-Ricardo/Atividade Integradora/geneplast/DadosPlasticidadeRAGENOVO.RData")
library(geneplast)
load("~/Dropbox/Mariel-Ricardo/Atividade Integradora/geneplast/geneplast_inputs.RData")
ogr <- new("OGR")
ogr <- groot(ogr,cogdata=cogdata, sspbranches=ssp_euk, spid="hs_branch", cogids=c("NOG80687", "KOG1325"), nPermutations=100)
orthoroot<-groot.get(ogr,what="orthoroot")
View(orthoroot)
install.packages("bio3d_2.0-1.tar.gz")
install.packages(GA)
install.packages("GA")
library("GA", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
source("http://bioconductor.org/biocLite.R")
biocLite("Biostrings")
library("Biostrings", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("seqinr", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
1ZDD<-c("FNMQCQRRFYEALHDPNLNEEQRNAKIKSIRDDC")
s1<-c("TADNKFNKEQQNAFYEILHLPNLNEEQRNGFIQSLKDDPSQSANLLAEAKKLNDAQAPKA")
s2<-c("DVDNKFNKEQQNAFWEILHLPNLNEEQRNGFIQSLKDDPSQSANLLAEAKKLNDAQAPK")
s3<-c("AQHDEAQQNAFYQVLNMPNLNADQRNGFIQSLKDDPSQSANVLGEAQKLNDSQAPK")
s4<-c("MRVRLSKTLAGILRHHPGRYGVRLTREGWARVSEVVEGLRKAGWSWVEEWHIVGVALHDPKGR
YELRNGEIRARYGHSIPVNVEPLPGEPPPILYHGTTEEALPLIMERGIMRGRRLKVHLTSSLED
AVSTGRRHGNLVAVLLVDVECLRRRGLKVERMSKTVYTVDWVPPECIAEVRRESLGRSL")
1ZDD<-as.character("FNMQCQRRFYEALHDPNLNEEQRNAKIKSIRDDC")
1ZDD<-"FNMQCQRRFYEALHDPNLNEEQRNAKIKSIRDDC"
s1ZDD<-"FNMQCQRRFYEALHDPNLNEEQRNAKIKSIRDDC"
1ZDDvs1 <- pairwiseAlignment(1ZDD, s1,substitutionMatrix = NULL, gapOpening = -2, scoreOnly = FALSE, type="local")
1ZDDvs1 <- pairwiseAlignment(s1ZDD, s1,substitutionMatrix = NULL, gapOpening = -2, scoreOnly = FALSE, type="local")
align1ZDDvs1 <- pairwiseAlignment(s1ZDD, s1,substitutionMatrix = NULL, gapOpening = -2, scoreOnly = FALSE, type="local")
align1ZDDvs2 <- pairwiseAlignment(1ZDD, s2,substitutionMatrix = NULL, gapOpening = -2, scoreOnly = FALSE, type="local")
align1ZDDvs3 <- pairwiseAlignment(1ZDD, s3,substitutionMatrix = NULL, gapOpening = -2, scoreOnly = FALSE, type="local")
align1ZDDvs4 <- pairwiseAlignment(1ZDD, s4,substitutionMatrix = NULL, gapOpening = -2, scoreOnly = FALSE, type="local")
align1ZDDvs2 <- pairwiseAlignment(s1ZDD, s2,substitutionMatrix = NULL, gapOpening = -2, scoreOnly = FALSE, type="local")
align1ZDDvs3 <- pairwiseAlignment(s1ZDD, s3,substitutionMatrix = NULL, gapOpening = -2, scoreOnly = FALSE, type="local")
align1ZDDvs4 <- pairwiseAlignment(s1ZDD, s4,substitutionMatrix = NULL, gapOpening = -2, scoreOnly = FALSE, type="local")
printPairwiseAlignment(align1ZDDvs1, 60)
align1ZDDvs1
Local PairwiseAlignedFixedSubject (1 of 1)
printPairwiseAlignment(align1ZDDvs1)
align1ZDDvs1 <- pairwiseAlignment(pattern=s1ZDD,subject=s1,substitutionMatrix = NULL, gapOpening = -2, scoreOnly = FALSE, type="local")
align1ZDDvs1
align1ZDDvs2
align1ZDDvs3
align1ZDDvs4
printPairwiseAlignment(align1ZDDvs1)
printPairwiseAlignment(align1ZDDvs2)
align1ZDDvs1 <- pairwiseAlignment(s1ZDD,s1,substitutionMatrix = BLOSUM50,
gapOpening = -2, scoreOnly = FALSE, type="local")
align1ZDDvs1 <- pairwiseAlignment(s1ZDD,s1,substitutionMatrix = BLOSUM50,
gapOpening = -2, scoreOnly = FALSE, type="local")
align1ZDDvs1 <- pairwiseAlignment(s1ZDD,s1, substitutionMatrix = NULL,
gapOpening = -2, scoreOnly = TRUE, type="local")
align1ZDDvs1 <- pairwiseAlignment(s1ZDD,s1, substitutionMatrix = NULL,
gapOpening = -2, scoreOnly = FALSE, type="local")
x<-matchPattern(s1ZDD, s1,
max.mismatch=1, min.mismatch=0,
with.indels=FALSE, fixed=TRUE,
algorithm="auto")
rm(x)
install.packages("~/Dropbox/EPI/NEW/geneplast/geneplast_0.99.7.tar.gz", repos = NULL, type = "source")
load("~/Dropbox/EPI/OLD/Testes/testes enraizamento/compar.RData")
View(compar)
load("~/Dropbox/EPI/OLD/Testes/testes enraizamento/test_NOG.RData")
View(compar)
View(pars)
View(sspids_euk)
library("Biostrings", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
source('~/.active-rstudio-document')
> x <- 2
x
library("Biostrings", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
> x <- 2
shiny::runApp('Documents/SummerProject/App')
shiny::runApp('Documents/SummerProject/testeReactive')
shiny::runApp('Documents/SummerProject/testeReactive')
shiny::runApp('Documents/SummerProject/testeReactive')
shiny::runApp('Documents/SummerProject/testeReactive')
shiny::runApp('Documents/SummerProject/testeReactive')
shiny::runApp('Documents/SummerProject/testeReactive')
shiny::runApp('Documents/SummerProject/testeReactive')
shiny::runApp('Documents/SummerProject/testeReactive')
shiny::runApp('Documents/SummerProject/testeReactive')
shiny::runApp('Documents/SummerProject/testeReactive')
shiny::runApp('Documents/SummerProject/testeReactive')
shiny::runApp('Documents/SummerProject/testeReactive')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Documents/SummerProject/testeReactive')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Dropbox/2016/SummerProject/App11.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Documents/SummerProject/App14.08')
shiny::runApp('Desktop/app')
shiny::runApp('Desktop/app')
shiny::runApp('Desktop/app')
shiny::runApp('Dropbox/2016/SummerProject/appReactive')
shiny::runApp('Desktop/app')
shiny::runApp('Dropbox/2016/SummerProject/appReactive')
shiny::runApp('Desktop/app')
shiny::runApp('Desktop/app')
shiny::runApp('Desktop/app')
shiny::runApp('Desktop/app')
shiny::runApp('Desktop/app')
shiny::runApp('Desktop/app')
shiny::runApp('Desktop/appGit')
shiny::runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
runApp('Desktop/appGit')
library(shiny)
library(shinyBS)
runApp(
# Ui
list(ui = pageWithSidebar(
headerPanel("Test App"),
sidebarPanel(
bsButton("renderButton", "Render"),
actionLink("link", "Help") ),
mainPanel("Hello World!")
),
# Server
server = function(input, output, session) {
# ... dealing with renderButton ...
addPopover(session=session, id="link", title="",
content="Testing.", placement = "bottom",
trigger = "click", options = NULL)
})
)
install.packages("shinyBS")
runApp('Desktop/appGit')
shiny::runApp('Desktop/appGit')
runApp('Desktop/appGit')
install.packages(carret)
install.packages(caret)
install.packages("caret")
library(caret)
model <- "stepLDA"
set.seed(2)
training <- twoClassSim(50, linearVars = 2)
library(caret)
install.packages("boruta")
install.packages("Boruta")
library(Boruta)
R --version
--version
install.packages("Boruta")
library(Boruta)
set.seed(777);
iris.extended<-data.frame(iris,apply(iris[,-5],2,sample));
names(iris.extended)[6:9]<-paste("Nonsense",1:4,sep="");
Boruta(Species~.,data=iris.extended,doTrace=2)->Boruta.iris.extended
print(Boruta.iris.extended);
Boruta(Species~.,data=iris.extended,getImp=getImpFerns)->Boruta.ferns.irisE
library(mlbench); data(HouseVotes84);
install.packages("rFerns")
library(rFerns)
iris.extended<-data.frame(iris,apply(iris[,-5],2,sample));
names(iris.extended)[6:9]<-paste("Nonsense",1:4,sep="");
Boruta(Species~.,data=iris.extended,doTrace=2)->Boruta.iris.extended
print(Boruta.iris.extended);
Boruta(Species~.,data=iris.extended,getImp=getImpFerns)->Boruta.ferns.irisE
print(Boruta.ferns.irisE);
library(mlbench); data(HouseVotes84);
install.packages("mlbench")
library(mlbench)
shiny::runApp('Desktop/appGit')
runApp('Desktop/appGit')
